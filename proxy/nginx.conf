# Define the user and worker processes
user nginx;
worker_processes auto;

# Error log and access log paths
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# Define the events block
events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name myu.ink;
        server_tokens off;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }

#         location / {
#             proxy_pass http://myu_fastapi:8888;

        }

        # Authentication using basic auth
        auth_basic "Restricted Area";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }
    server {
        listen 443 default_server ssl http2;
        listen [::]:443 ssl;
        # top two vs
        # listen 443 ssl
        server_name myu.ink;
        server_tokens off;


        ssl_certificate /etc/letsencrypt/live/example.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/example.org/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;



        location / {
            proxy_pass http://fastapi:8888;
            proxy_set_header    Host                $http_host;
            proxy_set_header    X-Real-IP           $remote_addr;
            proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        }

        # Authentication using basic auth
        auth_basic "Restricted Area";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }

}
