TrustedUserCAKeys
CASignatureAlgorithms


sudo apt-get update
sudo apt-get upgrade
sudo reboot


 limit requests to certain origins (hostnames or IP addresses) with a Content Security Policy, set up Basic Authentication, or create a custom authentication mechanism for nginx to use.
 https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/
 https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP


(from root)
sudo adduser reilly
sudo usermod -aG sudo reilly
mkdir /home/reilly/.ssh
cp .ssh/authorized_keys /home/reilly/.ssh/
chmod 700 /home/reilly/.ssh/
chmod 600 /home/reilly/.ssh/authorized_keys
chown reilly:reilly /home/reilly/.ssh/
chown reilly:reilly /home/reilly/.ssh/authorized_keys
ls -al /home/reilly/
(locally)
scp ~/.ssh/id_rsa.pub reilly@url:/home/reilly/authorized_keys.new
(backj on server)
mv /home/reilly/.ssh/authorized_keys /home/reilly/.ssh/authorized_keys.old
mv /home/reilly/authorized_keys.new /home/reilly/.ssh/authorized_keys



https://www.digitalocean.com/community/tutorials/how-to-disable-root-login-on-ubuntu-20-04
sudo nano  /etc/ssh/sshd_config
change PermitRootLogin yes -> no
sudo systemctl restart ssh


https://www.howtogeek.com/424510/how-to-create-and-install-ssh-keys-from-the-linux-shell/
https://www.howtogeek.com/443156/the-best-ways-to-secure-your-ssh-server/


sudo ufw enable
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow 22
sudo ufw allow 443
sudo ufw allow 80
sudo ufw reload
sudo ufw status



sudo apt install git-all
sudo apt install python3.9
sudo apt install nmap
sudo apt autoremove
sudo apt full-upgrade

sudo reboot

(remove apache)
sudo service apache2 stop
sudo apt-get purge apache2 apache2-utils apache2.2-bin apache2-common
sudo apt-get autoremove
whereis apache2
apache2: <ABOVE LISTS WHERE THEY ARE
sudo rm -rf <REMOVE LISTED>
sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common

sudo apt-get clean
sudo apt-get autoremove --purge

(Download docker) ------
https://docs.docker.com/engine/install/ubuntu/
sudo apt remove docker.io
sudo apt remove docker-compose
sudo apt remove docker-compose-v2
sudo apt remove docker-doc
sudo apt remove podman-docker
sudo apt remove containerd
sudo apt remove runc
sudo rm -rf /var/lib/docker
sudo rm -rf /var/lib/containerd

sudo apt-get clean
sudo apt-get autoremove --purge

# Add Docker's official GPG key: ___________________-
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update


 sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin


systemctl start docker
systemctl start docker
sudo groupadd docker
sudo usermod -aG docker reilly
<log out, and back in>
newgrp docker
docker run hello-world


sudo systemctl enable docker.service
sudo systemctl enable containerd.service


nano /etc/docker/daemon.json
{
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "10m",
    "max-file": "3"
  }
}
dockerd --validate --config-file=/etc/docker/daemon.json
systemctl restart docker

---------------------------------------




*make user myu=


# connect to github
ssh-keygen -t rsa -b 4096
cat .ssh/id_rsa.pub
# put cat into git hub account
git clone git@github.com:reillyrocks/myu-fileserver.git
